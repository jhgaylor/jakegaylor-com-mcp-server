<div class="mb-6">
    <!-- Tab Navigation -->
    <div class="border-b border-gray-200 dark:border-gray-700">
        <div class="flex flex-wrap -mb-px text-sm font-medium text-center" id="connectionTabs" role="tablist">
            <button class="tab-btn inline-block p-4 border-b-2 rounded-t-lg text-gray-800 dark:text-gray-200 mx-1" id="claude-tab" data-target="claude-content" type="button" role="tab" aria-selected="true">Claude</button>
            <button class="tab-btn inline-block p-4 border-b-2 rounded-t-lg text-gray-800 dark:text-gray-200 mx-1" id="cursor-tab" data-target="cursor-content" type="button" role="tab" aria-selected="false">Cursor</button>
            <button class="tab-btn inline-block p-4 border-b-2 rounded-t-lg text-gray-800 dark:text-gray-200 mx-1" id="windsurf-tab" data-target="windsurf-content" type="button" role="tab" aria-selected="false">Windsurf</button>
            <button class="tab-btn inline-block p-4 border-b-2 rounded-t-lg text-gray-800 dark:text-gray-200 mx-1" id="zed-tab" data-target="zed-content" type="button" role="tab" aria-selected="false">Zed</button>
            <button class="tab-btn inline-block p-4 border-b-2 rounded-t-lg text-gray-800 dark:text-gray-200 mx-1" id="http-tab" data-target="http-content" type="button" role="tab" aria-selected="false">HTTP</button>
            <button class="tab-btn inline-block p-4 border-b-2 rounded-t-lg text-gray-800 dark:text-gray-200 mx-1" id="typescript-tab" data-target="typescript-content" type="button" role="tab" aria-selected="false">TypeScript</button>
        </div>
    </div>

    <!-- Tab Content -->
    <div class="bg-gray-50 dark:bg-gray-800 p-4 rounded-md mt-4">
        <!-- Claude Tab -->
        <div class="tab-content hidden" id="claude-content" role="tabpanel" aria-labelledby="claude-tab">
            <figure class="relative bg-gray-900 text-gray-100 p-4 rounded-md">
                <figcaption class="mb-2 text-sm text-gray-300">Add this configuration to your Claude config</figcaption>
                <pre class="overflow-x-auto text-sm"><code>{
  "mcpServers": {
    "jake-gaylor-mcp": {
      "command": "npx",
      "args": ["-y", "@jhgaylor/me-mcp"]
    }
  }
}</code></pre>
                <button class="copy-btn absolute top-2 right-2 text-sm bg-gray-700 hover:bg-gray-600 text-white rounded px-2 py-1">Copy</button>
            </figure>
        </div>

        <!-- Cursor Tab -->
        <div class="tab-content hidden" id="cursor-content" role="tabpanel" aria-labelledby="cursor-tab">
            <figure class="relative bg-gray-900 text-gray-100 p-4 rounded-md">
                <figcaption class="mb-2 text-sm text-gray-300">Add this configuration to your Cursor settings</figcaption>
                <pre class="overflow-x-auto text-sm"><code>{
  "mcpServers": {
    "jake-gaylor-mcp": {
      "command": "npx",
      "args": ["-y", "@jhgaylor/me-mcp"]
    }
  }
}</code></pre>
                <button class="copy-btn absolute top-2 right-2 text-sm bg-gray-700 hover:bg-gray-600 text-white rounded px-2 py-1">Copy</button>
            </figure>
        </div>

        <!-- Windsurf Tab -->
        <div class="tab-content hidden" id="windsurf-content" role="tabpanel" aria-labelledby="windsurf-tab">
            <figure class="relative bg-gray-900 text-gray-100 p-4 rounded-md">
                <figcaption class="mb-2 text-sm text-gray-300">Configure Windsurf to connect</figcaption>
                <pre class="overflow-x-auto text-sm"><code>{
  "mcpServers": {
    "jake-gaylor-mcp": {
      "command": "npx",
      "args": ["-y", "@jhgaylor/me-mcp"]
    }
  }
}</code></pre>
                <button class="copy-btn absolute top-2 right-2 text-sm bg-gray-700 hover:bg-gray-600 text-white rounded px-2 py-1">Copy</button>
            </figure>
        </div>

        <!-- Zed Tab -->
        <div class="tab-content hidden" id="zed-content" role="tabpanel" aria-labelledby="zed-tab">
            <figure class="relative bg-gray-900 text-gray-100 p-4 rounded-md">
                <figcaption class="mb-2 text-sm text-gray-300">Set up Zed MCP server configuration</figcaption>
                <pre class="overflow-x-auto text-sm"><code>{
  "context_servers": {
    "jake-gaylor-mcp": {
      "settings": {},
      "command": {
        "path": "npx",
        "args": ["-y", "@jhgaylor/me-mcp"]
      }
    }
  }
}</code></pre>
                <button class="copy-btn absolute top-2 right-2 text-sm bg-gray-700 hover:bg-gray-600 text-white rounded px-2 py-1">Copy</button>
            </figure>
        </div>

        <!-- HTTP Tab -->
        <div class="tab-content hidden" id="http-content" role="tabpanel" aria-labelledby="http-tab">
            <div class="space-y-2">
                <p>For clients that support direct HTTP connections:</p>
                <ol class="list-decimal pl-5 space-y-1">
                    <li>Connect to: <code>https://ai.jakegaylor.com/mcp</code></li>
                    <li>Use standard MCP protocol methods to interact with the server</li>
                    <li>No local installation required - the server is already hosted and ready to use</li>
                </ol>
            </div>
        </div>

        <!-- TypeScript Tab -->
        <div class="tab-content hidden" id="typescript-content" role="tabpanel" aria-labelledby="typescript-tab">
            <figure class="relative bg-gray-900 text-gray-100 p-4 rounded-md">
                <figcaption class="mb-2 text-sm text-gray-300">Example TypeScript connection code</figcaption>
                <pre class="overflow-x-auto text-sm"><code>import { Client } from "@modelcontextprotocol/sdk/client/index.js";
import { StreamableHTTPClientTransport } from "@modelcontextprotocol/sdk/client/streamableHttp.js";

async function connectToMCP() {
  const baseUrl = new URL("https://ai.jakegaylor.com/mcp");
  
  try {
    const client = new Client({ name: 'example-mcp-client', version: '1.0.0' });
    const transport = new StreamableHTTPClientTransport(baseUrl);
    await client.connect(transport);
    console.log("Connected to MCP server!");
    const resumeResource = await client.getResource("candidate-info://resume-text");
    console.log("Resume:", resumeResource.contents[0].text);
    const githubUrl = await client.callTool({ toolName: "get_github_url", args: {} });
    console.log("GitHub URL:", githubUrl.content[0].text);
  } catch (error) {
    console.error("Failed to connect to MCP server:", error);
  }
}
connectToMCP();</code></pre>
                <button class="copy-btn absolute top-2 right-2 text-sm bg-gray-700 hover:bg-gray-600 text-white rounded px-2 py-1">Copy</button>
            </figure>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tabs = document.querySelectorAll('.tab-btn');
        const tabContents = document.querySelectorAll('.tab-content');

        // Set the first tab as active by default
        tabs[0].classList.add('border-blue-600', 'text-blue-600', 'dark:text-blue-500', 'dark:border-blue-500', 'active');
        document.getElementById(tabs[0].dataset.target).classList.remove('hidden');

        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                // Remove active class from all tabs
                tabs.forEach(t => {
                    t.classList.remove('border-blue-600', 'text-blue-600', 'dark:text-blue-500', 'dark:border-blue-500', 'active');
                    t.classList.add('border-transparent', 'hover:text-gray-600', 'dark:hover:text-gray-300', 'hover:border-gray-300');
                    t.setAttribute('aria-selected', 'false');
                });

                // Add active class to clicked tab
                tab.classList.add('border-blue-600', 'text-blue-600', 'dark:text-blue-500', 'dark:border-blue-500', 'active');
                tab.classList.remove('border-transparent', 'hover:text-gray-600', 'dark:hover:text-gray-300', 'hover:border-gray-300');
                tab.setAttribute('aria-selected', 'true');

                // Hide all tab contents
                tabContents.forEach(content => {
                    content.classList.add('hidden');
                });

                // Show the corresponding tab content
                document.getElementById(tab.dataset.target).classList.remove('hidden');
            });
        });
    });
</script> 